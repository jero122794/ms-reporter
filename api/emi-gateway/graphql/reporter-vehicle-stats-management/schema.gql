extend type Query {
  OrganizationMngOrganizationListing: OrganizationMngOrganizationListingResult!
}
type OrganizationMngOrganizationListingResult {
  data: [Organization!]!
  total: Int!
}

type Organization {
  _id: ID!
  name: String!
  logoUrl: String
}


type CommandResponse {
  "Response code"
  code: Int
  "Response message"
  message: String
}

type ReporterVehicleStats {
  "VehicleStats ID"
  id: ID!
  "name"
  name: String!
  "organization id"
  organizationId: String!
  "VehicleStats description"
  description: String
  "VehicleStats active flag"
  active: Boolean!  
  "object metadata"
  metadata: ReporterVehicleStatsMetadata
}

type ReporterVehicleStatsMetadata {
    createdBy: String
		createdAt: BigInt
		updatedBy: String
		updatedAt: BigInt
}

type ReporterVehicleStatsListing {
  "Listing"
  listing: [ReporterVehicleStats]
  "query total result count"
  queryTotalResultCount: Int,  
}


input ReporterVehicleStatsFilterInput {
  "Name"
  name: String
  "organization id"
  organizationId: String!
  "VehicleStats active flag"
  active: Boolean
}

input ReporterVehicleStatsPaginationInput {
  "Page"
  page: Int!
  "Count"
  count: Int!
  "query total result count flag"
  queryTotalResultCount: Boolean
}

input ReporterVehicleStatsSortInput {
  field: String!,
  asc: Boolean!,
}

input ReporterVehicleStatsInput {
  "name"
  name: String
  "organization id"
  organizationId: String!
  "VehicleStats description"
  description: String
  "VehicleStats active flag"
  active: Boolean
}


type FleetStatistics {
  _id: ID!
  totalVehicles: Int!
  vehiclesByType: FleetTypeStats
  vehiclesByDecade: FleetDecadeStats
  vehiclesBySpeedClass: FleetSpeedClassStats
  hpStats: FleetHpStats
  lastUpdated: String!
}

type FleetTypeStats {
  SUV: Int
  PickUp: Int
  Sedan: Int
}

type FleetDecadeStats {
  decade1980s: Int
  decade1990s: Int
  decade2000s: Int
  decade2010s: Int
  decade2020s: Int
}

type FleetSpeedClassStats {
  Lento: Int
  Normal: Int
  Rapido: Int
}

type FleetHpStats {
  min: Float!
  max: Float!
  sum: Float!
  count: Int!
  avg: Float!
}


type Query {
  "Get VehicleStatss filtered "
  ReporterVehicleStatsListing(filterInput: ReporterVehicleStatsFilterInput, paginationInput: ReporterVehicleStatsPaginationInput, sortInput: ReporterVehicleStatsSortInput): ReporterVehicleStatsListing
  "Get VehicleStats by its id"
  ReporterVehicleStats(id: ID!, organizationId: String!): ReporterVehicleStats
  "Get real-time fleet statistics"
  GetFleetStatistics: FleetStatistics
}

type Mutation {
  "Create a new VehicleStats"
  ReporterCreateVehicleStats(input: ReporterVehicleStatsInput!): ReporterVehicleStats
  "Update an VehicleStats"
  ReporterUpdateVehicleStats(id: ID!, input: ReporterVehicleStatsInput!, merge: Boolean!): ReporterVehicleStats  
  "Deletes an VehicleStats"
  ReporterDeleteVehicleStatss(ids: [ID]!): CommandResponse  
}


type Subscription {
  "This events is triggered when a vehicleStats updated or deleted"
  ReporterVehicleStatsModified(id: ID!): ReporterVehicleStats
  "This event is triggered when fleet statistics are updated"
  FleetStatisticsUpdated: FleetStatistics
}
